apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: build-container-image-studybot
spec:
  entrypoint: kaniko-build-flow
  arguments:
    parameters:
      - name: model-version
      - name: environment

  volumeClaimTemplates:
    - metadata:
        name: workdir
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 2Gi

  templates:
    - name: kaniko-build-flow
      steps:
        - - name: clone-repo
            template: git-clone
        - - name: fetch-model
            template: download-model
            arguments:
              parameters:
                - name: model-version
                  value: "{{workflow.parameters.model-version}}"
        - - name: kaniko-build
            template: kaniko
            arguments:
              parameters:
                - name: model-version
                  value: "{{workflow.parameters.model-version}}"
        - - name: tag-model-staging
            template: set-mlflow-alias
            arguments:
              parameters:
                - name: model-version
                  value: "{{workflow.parameters.model-version}}"
        - - name: deploy-to-staging
            template: trigger-deploy
            arguments:
              parameters:
                - name: model-version
                  value: "{{workflow.parameters.model-version}}"
                - name: environment
                  value: "{{workflow.parameters.environment}}"

    - name: git-clone
      container:
        image: alpine/git
        command: [sh, -c]
        args:
          - |
            git clone --branch main https://github.com/RuchiMJha/studybot-iac.git /mnt/workspace
        volumeMounts:
          - name: workdir
            mountPath: /mnt/workspace

    - name: download-model
      inputs:
        parameters:
          - name: model-version
      container:
        image: python:3.11-slim
        command: [sh, -c]
        args:
          - |
            pip install mlflow-skinny
            export MLFLOW_TRACKING_URI=http://mlflow.studybot-platform.svc.cluster.local:8000
            mlflow artifacts download \
              --artifact-uri models:/StudyBotAudioModel/{{inputs.parameters.model-version}} \
              -d /mnt/workspace/model
            cp /mnt/workspace/model/data/model.pth /mnt/workspace/model.pth
            echo "1.0.{{inputs.parameters.model-version}}" > /mnt/workspace/versions.txt
        volumeMounts:
          - name: workdir
            mountPath: /mnt/workspace

    - name: kaniko
      inputs:
        parameters:
          - name: model-version
      container:
        image: gcr.io/kaniko-project/executor:latest
        args:
          - --dockerfile=/mnt/workspace/Dockerfile
          - --context=/mnt/workspace
          - --destination=registry.kube-system.svc.cluster.local:5000/studybot-app:{{inputs.parameters.environment}}-1.0.{{inputs.parameters.model-version}}
          - --insecure
        volumeMounts:
          - name: workdir
            mountPath: /mnt/workspace

    - name: set-mlflow-alias
      inputs:
        parameters:
          - name: model-version
      script:
        image: python:3.11-slim
        command: [sh, -c]
        source: |
          pip install mlflow-skinny > /dev/null
          export MLFLOW_TRACKING_URI=http://mlflow.studybot-platform.svc.cluster.local:8000
          python -c "import mlflow; client = mlflow.tracking.MlflowClient(); client.set_registered_model_alias(name='StudyBotAudioModel', alias='staging', version='{{inputs.parameters.model-version}}')"

    - name: trigger-deploy
      inputs:
        parameters:
          - name: model-version
          - name: environment
      resource:
        action: create
        manifest: |
          apiVersion: argoproj.io/v1alpha1
          kind: Workflow
          metadata:
            generateName: deploy-container-image-
          spec:
            workflowTemplateRef:
              name: deploy-container-image
            arguments:
              parameters:
                - name: environment
                  value: "{{inputs.parameters.environment}}"
                - name: model-version
                  value: "{{inputs.parameters.model-version}}"

